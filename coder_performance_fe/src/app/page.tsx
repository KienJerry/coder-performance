import type { Metadata, ResolvingMetadata  } from "next";
import { MainLayout } from "@/layouts/main-layout";


type Props = {
  params: { id: string };
  searchParams: { [key: string]: string | string[] | undefined };
};

export async function generateMetadata(
  { params, searchParams }: Props,
  parent: ResolvingMetadata
): Promise<Metadata> {
  // read route params
  const id = params.id;

  // fetch data
  const product = {
    title: "Title HomePage",
  };

  // optionally access and extend (rather than replace) parent metadata
  const previousImages = (await parent).openGraph?.images || [];

  return {
    metadataBase: new URL("https://yourdomain.com"), // Thay thế 'https://yourdomain.com' bằng URL thực tế của bạn
    title: product.title,
    description: "Generated by Next.js",
    openGraph: {
      images: ["/some-specific-page-image.jpg", ...previousImages],
    },
    twitter: {
      card: "summary_large_image",
      images: ["/some-specific-page-image.jpg"],
    },
  };
}

export default function Home({ params, searchParams }: Props) {
  return (
    <MainLayout>
      <div>1234</div>
    </MainLayout>
  );
}

export async function generateStaticParams() {
  // const posts = await fetch('https://.../posts').then((res) => res.json())

  const posts = 'abc'
  return [posts]
 
  // return posts.map((post) => ({
  //   slug: post.slug,
  // }))
}

export const revalidate = 3600; //1h